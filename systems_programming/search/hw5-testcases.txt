Test Cases - Search
Craig Perkins
Alex Tang

Test Case 1: no arg after search
Input:
./search

Output:
Error: Incorrect format, expecting:
search <inverted-index file name>

Test Case 2: searching nonexistent file
Input:
./search nonexistent_file

Output:
Error: nonexistent_file does not exist.

NOTE: $ ___ indicates a REPL (read-eval-print loop) command

Test Case 3: entering incorrect command in REPL
Input:
$ incorrect_command

Output:
Error: incorrect_command: invalid command.

*** sa Test Cases ***
Test Case 4: no term after sa
Input:
$ sa

Output:
Error: Incorrect format, expecting:
sa <term> ...

Test Case 5: sa for nonexistent term
Input: $ sa nonexistent_term

Output:


Test Case 6: sa for one term
Input:
$ sa term1

Output:
file1.txt
file2.txt
file3.txt

Test Case 7: sa for two or more terms
Input:
$ sa term1 term2

Output:
file1.txt
file2.txt

Test Case 8: sa for two or more terms containing a nonexistent term
Input:
$ sa term1 nonexistent_term

Output:

*** so Test Cases ***
Test Case 9: no term after so
Input:
$ so

Output:
Error: Incorrect format, expecting:
so <term> ...

Test Case 10: nonexistent term after so
Input:
$ so nonexistent_term

Output:


Test Case 11: so for one term
Input:
$ so term1

Output:
file1.txt
file2.txt
file3.txt

Test Case 12: so for two or more terms
Input:
$ so term1 term2

Output:
file1.txt
file2.txt
file3.txt
file4.txt

Test Case 13: so for two or more terms containing a nonexistent term
Input:
$ so term1 nonexistent_term

Output:
file1.txt
file2.txt
file3.txt
